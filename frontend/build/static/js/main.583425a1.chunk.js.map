{"version":3,"sources":["components/Attribute.jsx","components/Display.jsx","components/ToggleButtons.jsx","components/Boosts.jsx","components/Footer.jsx","tabs/Smithing.jsx","tabs/Cooking.jsx","tabs/Crafting.jsx","components/Header.jsx","Home.jsx","App.js","index.js"],"names":["Attribute","minValue","maxValue","attributeName","updateAttribute","React","useState","attribute","setAttribute","checkAndUpdateValue","currentValue","newValue","finalValue","useEffect","Box","sx","display","alignItems","justifyContent","TextField","label","type","value","onChange","event","target","valueAsNumber","margin","width","Display","level","targetLevel","material","boosts","boostsDidUpdate","keywords","expData","setExp","expGap","setExpGap","expGapBoost","setExpGapBoost","isBusy","setBusy","boostsPrev","ref","useRef","current","usePrevious","addCommas","num","toString","replace","console","log","expGapCopy","i","length","name","active","Math","floor","ceil","fetch","then","response","ok","json","data","catch","error","flexWrap","List","dense","ListItem","ListItemText","primary","secondary","Object","keys","map","submaterial","StyledToggleButtonGroup","styled","ToggleButtonGroup","theme","borderColor","borderRadius","spacing","shape","border","ToggleButtons","updateMaterial","artisanData","skill","selectedMaterial","setSelectedMaterial","handleChange","newMaterial","currentTarget","submaterials","marginBottom","maxWidth","marginLeft","marginRight","size","exclusive","padding","undefined","ToggleButton","src","height","onClick","alt","Boosts","updateBoosts","selectedBoost","setSelectedBoost","boostName","boostsCopy","boost","Footer","component","marginTop","Container","Typography","variant","align","color","Link","href","rel","Date","getFullYear","Smithing","currentLevel","setCurrentLevel","setNextAttribute","setMaterial","setArtisanData","setBoostDidUpdate","setBoosts","updatedBoostName","Cooking","Header","AppBar","position","Toolbar","noWrap","Home","props","match","history","page","params","tabNameToIndex","smithing","crafting","cooking","selectedTab","setSelectedTab","borderBottom","Tabs","push","Tab","disabled","Crafting","App","exact","from","to","path","render","rootElement","document","getElementById","ReactDOM","StrictMode","CssBaseline"],"mappings":"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","file":"static/js/main.583425a1.chunk.js","sourcesContent":["import React from \"react\";\n// import { styled } from \"@material-ui/core/styles\";\n// import Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\n\nconst Attribute = ({ minValue, maxValue, attributeName, updateAttribute }) => {\n  const [attribute, setAttribute] = React.useState(1);\n\n  const checkAndUpdateValue = (currentValue, newValue) => {\n    let finalValue;\n    // Check if value is above minimum\n    if (currentValue > minValue || newValue >= minValue) {\n      // Check if value is less tha maximum\n      if (currentValue > maxValue || newValue >= maxValue) {\n        finalValue = 120;\n        setAttribute(finalValue);\n      } else {\n        finalValue = newValue;\n        setAttribute(finalValue);\n      }\n    } else {\n      finalValue = minValue;\n      setAttribute(finalValue);\n    }\n    // Update parent component attribute\n    updateAttribute(finalValue);\n  };\n\n  React.useEffect(() => {\n    // eslint-disable-next-line\n    if (minValue + 1 > attribute && minValue != 0) {\n      // eslint-disable-next-line\n      if (minValue > 1) {\n        checkAndUpdateValue(attribute, minValue + 10);\n      } else {\n        checkAndUpdateValue(attribute, minValue + 9);\n      }\n    }\n    // eslint-disable-next-line\n  }, [minValue]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {/* <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={styles.button}\n          // href=\"#outlined-buttons\"\n          onClick={() => {\n            checkAndUpdateValue(attribute, attribute - 1, true);\n            // setAttribute(newAttribute);\n            // updateAttribute(newAttribute);\n          }}\n        >\n          -\n        </Button> */}\n        <TextField\n          label={attributeName}\n          type=\"number\"\n          // defaultValue=\"1\"\n          value={attribute}\n          // Remove initial zero\n          // value={('' + attribute).replace(/^0+/, '')}\n          onChange={function (event) {\n            checkAndUpdateValue(attribute, event.target.valueAsNumber);\n            // updateAttribute(newAttribute);\n          }}\n          sx={{\n            \"& > :not(style)\": {\n              margin: 1,\n              // marginTop: 3,\n              width: \"22ch\",\n            },\n            // display: flex,\n            // \"justify-content\": center,\n            // \"align-items\": center,\n            // alignItems: \"center\",\n          }}\n        />\n        {/* <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={styles.button}\n          // href=\"#outlined-buttons\"\n          onClick={() => {\n            checkAndUpdateValue(attribute, attribute + 1, true);\n            // setAttribute(newAttribute);\n            // updateAttribute(newAttribute);\n          }}\n        >\n          +\n        </Button> */}\n      </Box>\n    </>\n  );\n};\n\nexport default Attribute;\n","import React from \"react\";\n// import Paper from '@material-ui/core/Paper';\n\n// import { styled } from \"@material-ui/core/styles\";\n// import Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nfunction usePrevious(value) {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst Display = ({\n  level,\n  targetLevel,\n  material,\n  boosts,\n  boostsDidUpdate,\n  keywords,\n}) => {\n  const [expData, setExp] = React.useState({});\n  const [expGap, setExpGap] = React.useState(0);\n  // Auxiliary var for applying boosts\n  const [expGapBoost, setExpGapBoost] = React.useState(0);\n  // Variable to check if data has been fetched\n  const [isBusy, setBusy] = React.useState(true);\n  const boostsPrev = usePrevious(boosts);\n  const addCommas = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // Update exp gap to match applied boosts\n  React.useEffect(() => {\n    console.log(\"boost changed\", boostsPrev);\n    let expGapCopy = expGapBoost;\n    console.log(\"before boost loop\", boostsDidUpdate[0]);\n    for (let i = 0; i < boosts.length; i++) {\n      console.log(\"entered boost loop\", boosts[i].name, boostsDidUpdate[0]);\n      if (boosts[i].name === boostsDidUpdate[0]) {\n        if (boosts[i].active === true) {\n          console.log(\"activate boost\", boosts[i].name);\n          expGapCopy /= boosts[i].value;\n          setExpGapBoost(Math.floor(expGapCopy));\n        } else {\n          console.log(\"deactivate boost\", boosts[i].name);\n          expGapCopy *= boosts[i].value;\n          setExpGapBoost(Math.ceil(expGapCopy));\n        }\n      }\n    }\n\n    console.log(\"boosts\", boosts);\n    // eslint-disable-next-line\n  }, [boostsDidUpdate, boosts, boostsPrev]);\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:8000/exp\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        setBusy(false);\n        setExp(data);\n        // console.log(\"set busy\");\n      })\n      .catch((error) => {\n        console.log(\"Error:\", error);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    console.log(\n      \"useEffect initial\",\n      level,\n      expData[level],\n      targetLevel,\n      expData[targetLevel],\n      expGapBoost\n    );\n    if (!isBusy) {\n      // console.log(\"useEffect inside if\", expGapBoost);\n      setExpGap(expData[targetLevel] - expData[level]);\n      setExpGapBoost(expData[targetLevel] - expData[level]);\n    }\n    // setExpGap(addCommas(expGapBoost));\n    // console.log(\"useEffect final\", expGapBoost);\n    // eslint-disable-next-line\n  }, [expData, level, targetLevel]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          // border: 1,\n          // maxWidth: 1000,\n        }}\n      >\n        <List dense={true}>\n          <ListItem>\n            <ListItemText\n              primary={\"Total exp: \" + addCommas(expGap)}\n              secondary=\"\"\n            />\n          </ListItem>\n          {/* {console.log(\"Material: \", material)} */}\n          <ListItem>\n            {material[0] === \"material\" ? (\n              // Render empty component in case no material was selected\n              <></>\n            ) : keywords[0] === \"Bars\" ? (\n              // Render results for Smithing\n              <ListItemText\n                primary={\n                  \"Total \" +\n                  material[0] +\n                  \" \" +\n                  keywords[0] +\n                  \": \" +\n                  addCommas(Math.ceil(expGapBoost / material[1][\"xp\"]))\n                }\n              />\n            ) : keywords[0] === \"Relics of\" ? (\n              // Render results for Crafting\n              // Cursed relics exception\n              material[0] === \"Cursed\" ? (\n                <ListItemText\n                  primary={\n                    \"Total \" +\n                    material[0] +\n                    \" relics:   \" +\n                    addCommas(Math.ceil(expGapBoost / material[1][\"xp\"]))\n                  }\n                />\n              ) : (\n                <ListItemText\n                  primary={\n                    \"Total \" +\n                    keywords[0] +\n                    \" \" +\n                    material[0] +\n                    \": \" +\n                    addCommas(Math.ceil(expGapBoost / material[1][\"xp\"]))\n                  }\n                />\n              )\n            ) : (\n              // Render results for Cooking\n              <ListItemText\n                primary={\n                  \"Total \" +\n                  keywords[0] +\n                  \" \" +\n                  material[0] +\n                  \": \" +\n                  addCommas(Math.ceil(expGapBoost / material[1][\"xp\"]))\n                }\n              />\n            )}\n          </ListItem>\n\n          {Object.keys(material[1][\"submaterials\"]).map((submaterial) => (\n            // Render submaterials\n            <ListItem>\n              <ListItemText\n                primary={\n                  \"Total \" +\n                  submaterial +\n                  \": \" +\n                  addCommas(\n                    Math.ceil(expGapBoost / material[1][\"xp\"]) *\n                      material[1][\"submaterials\"][submaterial]\n                  )\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n    </>\n  );\n};\n\nexport default Display;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\nimport { Box } from \"@material-ui/core\";\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  \"&.Mui-selected\": {\n    borderColor: \"#2e7d32\",\n    borderRadius: 9,\n  },\n  \"& .MuiToggleButtonGroup-grouped\": {\n    margin: theme.spacing(0.5),\n    borderRadius: theme.shape.borderRadius,\n    // borderLeft: 1,\n    borderColor: \"#bdbdbd\",\n    \"&.Mui-disabled\": {\n      border: 1,\n    },\n    \"&:not(:first-of-type)\": {\n      borderRadius: theme.shape.borderRadius,\n      borderColor: \"#bdbdbd\",\n    },\n    \"&:first-of-type\": {\n      borderRadius: theme.shape.borderRadius,\n      borderColor: \"#bdbdbd\",\n    },\n  },\n}));\n\nconst ToggleButtons = ({ updateMaterial, artisanData, skill }) => {\n  const [selectedMaterial, setSelectedMaterial] = React.useState();\n\n  const handleChange = (event, newMaterial) => {\n    if (event.currentTarget.value !== \"loading\") {\n      // setSelectedMaterial(event.currentTarget.value);\n      setSelectedMaterial(newMaterial);\n      console.log(newMaterial, selectedMaterial);\n      if (newMaterial === null) {\n        updateMaterial([\"material\", { name: \"material\", submaterials: {} }]);\n      } else {\n        updateMaterial([\n          event.currentTarget.value,\n          artisanData[skill][event.currentTarget.value],\n        ]);\n      }\n    }\n  };\n  return (\n    <>\n      <Box\n        sx={{\n          \"& > :not(style)\": {\n            marginBottom: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            maxWidth: 450,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          },\n        }}\n      >\n        <StyledToggleButtonGroup\n          size=\"small\"\n          value={selectedMaterial}\n          exclusive\n          onChange={handleChange}\n          sx={{\n            // border: 1,\n            // borderColor: \"#c4c4c4\",\n            padding: 1,\n            // borderTop: 2,\n            // borderTop: 2,\n          }}\n        >\n          {artisanData[skill] !== undefined ? (\n            Object.keys(artisanData[skill]).map((material) => (\n              <ToggleButton\n                value={material}\n                sx={{\n                  // outlineColor: \"red\",\n                  // outlineWidth: \"1px\",\n                  // outlineStyle: \"solid\",\n                  // borderWidth: 4,\n                  // borderRadius: \"2px\",\n                  // margin: \"20px\",\n                  \"& > :not(style)\": {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  },\n                  // border: 1,\n                  // borderColor: \"#b4b4b4\",\n                }}\n              >\n                <Box\n                  sx={{\n                    marginRight: 0.4,\n                  }}\n                >\n                  <img\n                    src={`/images/${skill}/${material}.png`}\n                    width=\"22\"\n                    height=\"22\"\n                    value={material}\n                    onClick={handleChange}\n                    alt=\"Material icon\"\n                  />\n                </Box>\n                {material}\n              </ToggleButton>\n            ))\n          ) : (\n            <ToggleButton value=\"loading\">Loading</ToggleButton>\n          )}\n          {/* <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\n            qqqqqq\n          </ToggleButton> */}\n        </StyledToggleButtonGroup>\n      </Box>\n    </>\n  );\n};\n\nexport default ToggleButtons;\n","import React from \"react\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Box from \"@material-ui/core/Box\";\nimport { ToggleButton } from \"@material-ui/core\";\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\nimport { styled } from \"@material-ui/core/styles\";\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  \"& .MuiToggleButtonGroup-grouped\": {\n    margin: theme.spacing(0.5),\n    borderColor: \"#bdbdbd\",\n    \"&.Mui-disabled\": {\n      border: 1,\n    },\n    \".Mui-selected\": {\n      borderColor: \"#2e7d32\",\n    },\n    \"&:not(:first-of-type)\": {\n      borderRadius: theme.shape.borderRadius,\n      borderColor: \"#bdbdbd\",\n    },\n    \"&:first-of-type\": {\n      borderRadius: theme.shape.borderRadius,\n      borderColor: \"#bdbdbd\",\n    },\n  },\n}));\n\nconst Boosts = ({ boosts, updateBoosts }) => {\n  const [selectedBoost, setSelectedBoost] = React.useState([]);\n\n  const handleChange = (event, boostName) => {\n    console.log(boosts, boostName);\n    setSelectedBoost(boostName);\n    let boostsCopy = boosts;\n    for (let i = 0; i < boostsCopy.length; i++) {\n      if (boostsCopy[i].name === event.currentTarget.value) {\n        // console.log(\"boosts active:\", boosts[i].active);\n        boostsCopy[i].active = !boosts[i].active;\n      }\n    }\n    updateBoosts(boostsCopy, event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n        }}\n      >\n        <StyledToggleButtonGroup\n          size=\"small\"\n          value={selectedBoost}\n          // exclusive\n          onChange={handleChange}\n          // sx={{ border: 1, borderColor: \"#c4c4c4\", padding: 1 }}\n        >\n          {boosts !== undefined ? (\n            boosts.map((boost) => (\n              <ToggleButton\n                value={boost.name}\n                sx={{\n                  \"& > :not(style)\": {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  },\n                }}\n              >\n                <Box\n                  sx={{\n                    marginRight: 0.4,\n                  }}\n                >\n                  <img\n                    src={`/images/Boosts/${boost.name}.png`}\n                    width=\"22\"\n                    height=\"22\"\n                    value={boost.name}\n                    onClick={handleChange}\n                    alt=\"Boost icon\"\n                  />\n                </Box>\n                {boost.name + \" (+\" + Math.floor((boost.value - 1) * 100) + \"%)\"}\n              </ToggleButton>\n              // <FormControlLabel\n              //   control={\n              //     <Checkbox\n              //       // checked={boost.active}\n              //       onChange={() => {\n              //         handleChange(boost.name);\n              //       }}\n              //     />\n              //   }\n              //   label={\n              //     boost.name + \"(+\" + Math.floor((boost.value - 1) * 100) + \"%)\"\n              //   }\n              // />\n            ))\n          ) : (\n            <></>\n          )}\n        </StyledToggleButtonGroup>\n      </Box>\n    </>\n  );\n};\n\nexport default Boosts;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Footer = () => {\n  return (\n    <Box component=\"footer\" sx={{ marginTop: 5, marginBottom: 2 }}>\n      <Container maxWidth=\"lg\">\n        <Typography\n          variant=\"body2\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          Bugs? Suggestions? Contact me on Discord:{\" \"}\n          <Link\n            color=\"inherit\"\n            href=\"https://discordapp.com/users/chends#7176\"\n            rel=\"noopener\"\n            target=\"_blank\"\n          >\n            chends#7176\n          </Link>\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {\"Copyright © \"}\n          <Link\n            color=\"inherit\"\n            href=\"https://www.curseofaros.com/\"\n            rel=\"noopener\"\n            target=\"_blank\"\n          >\n            Curse of Aros\n          </Link>\n          {\" and \"}\n          <Link\n            color=\"inherit\"\n            href=\"https://bitgate.com/\"\n            rel=\"noopener\"\n            target=\"_blank\"\n          >\n            Bitgate, Inc.\n          </Link>{\" \"}\n          {new Date().getFullYear()}\n          {\".\"}\n        </Typography>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\n\nimport \"../App.css\";\n// import { styled } from \"@material-ui/core/styles\";\n// import Slider from \"./components/Slider\";\nimport Attribute from \"../components/Attribute\";\nimport Display from \"../components/Display\";\n// import Dropdown from \"./components/Dropdown\";\nimport ToggleButtons from \"../components/ToggleButtons\";\nimport Boosts from \"../components/Boosts\";\nimport Footer from \"../components/Footer\";\n\n// Max bar input: 567.019.187\nconst Smithing = () => {\n  // Person's current level\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const updateCurrentLevel = (currentLevel) => {\n    setCurrentLevel(currentLevel);\n  };\n  // Person's target level\n  const [targetLevel, setNextAttribute] = useState(1);\n  const updateTargetLevel = (targetLevel) => {\n    setNextAttribute(targetLevel);\n  };\n  // Person's target material\n  const [material, setMaterial] = useState([\n    \"material\",\n    { name: \"material\", submaterials: {} },\n  ]);\n  const updateMaterial = (material) => {\n    setMaterial(material);\n  };\n\n  // Person's target material\n  const [artisanData, setArtisanData] = useState({});\n\n  // Exp boosts\n  const [boostsDidUpdate, setBoostDidUpdate] = useState([\"Boost name\", false]);\n  const [boosts, setBoosts] = useState([\n    { name: \"World Boost\", value: 1.5, active: false },\n    { name: \"Infernal Ring\", value: 1.04, active: false },\n    { name: \"Infernal Hammer\", value: 1.04, active: false },\n  ]);\n  const updateBoosts = (boosts, updatedBoostName) => {\n    setBoosts(boosts);\n    setBoostDidUpdate([updatedBoostName, !boostsDidUpdate[1]]);\n    console.log(\"Boosts update\", updatedBoostName);\n  };\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:8000/artisan\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        // setBusy(false);\n        setArtisanData(data);\n        // console.log(\"set busy\");\n      })\n      .catch((error) => {\n        console.log(\"Error:\", error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Attribute\n        minValue={0}\n        maxValue={120}\n        attributeName={\"Your Smithing Level\"}\n        updateAttribute={updateCurrentLevel}\n      />\n      <Attribute\n        minValue={currentLevel}\n        maxValue={120}\n        attributeName={\"Target Smithing Level\"}\n        updateAttribute={updateTargetLevel}\n        sx={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      />\n      <ToggleButtons\n        updateMaterial={updateMaterial}\n        artisanData={artisanData}\n        skill=\"Smithing\"\n      />\n      <Boosts boosts={boosts} updateBoosts={updateBoosts} />\n      <Display\n        level={currentLevel}\n        targetLevel={targetLevel}\n        material={material}\n        keywords={[\"Bars\"]}\n        boosts={boosts}\n        boostsDidUpdate={boostsDidUpdate}\n      />\n      {/* <Slider sliderName={\"Your Smithing XP\"}/>\n      <Slider sliderName={\"Ore 1\"}/>\n      <Slider sliderName={\"Ore 2\"}/> */}\n      <Footer />\n    </>\n  );\n};\n\nexport default Smithing;\n","import React, { useState } from \"react\";\n\nimport \"../App.css\";\n// import { styled } from \"@material-ui/core/styles\";\n// import Slider from \"./components/Slider\";\nimport Attribute from \"../components/Attribute\";\nimport Display from \"../components/Display\";\n// import Dropdown from \"./components/Dropdown\";\nimport ToggleButtons from \"../components/ToggleButtons\";\nimport Boosts from \"../components/Boosts\";\nimport Footer from \"../components/Footer\";\n\nconst Cooking = () => {\n  // Person's current level\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const updateCurrentLevel = (currentLevel) => {\n    setCurrentLevel(currentLevel);\n  };\n  // Person's target level\n  const [targetLevel, setNextAttribute] = useState(1);\n  const updateTargetLevel = (targetLevel) => {\n    setNextAttribute(targetLevel);\n  };\n  // Person's target material\n  const [material, setMaterial] = useState([\n    \"material\",\n    { name: \"material\", submaterials: {} },\n  ]);\n  const updateMaterial = (material) => {\n    setMaterial(material);\n  };\n\n  // Person's target material\n  const [artisanData, setArtisanData] = useState({});\n\n  // Exp boosts\n  const [boostsDidUpdate, setBoostDidUpdate] = useState([\"Boost name\", false]);\n  const [boosts, setBoosts] = useState([\n    { name: \"World Boost\", value: 1.5, active: false },\n  ]);\n  const updateBoosts = (boosts, updatedBoostName) => {\n    setBoosts(boosts);\n    setBoostDidUpdate([updatedBoostName, !boostsDidUpdate[1]]);\n    console.log(\"Boosts update\", updatedBoostName);\n  };\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:8000/artisan\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        // setBusy(false);\n        setArtisanData(data);\n        // console.log(\"set busy\");\n      })\n      .catch((error) => {\n        console.log(\"Error:\", error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Attribute\n        minValue={0}\n        maxValue={120}\n        attributeName={\"Your Cooking Level\"}\n        updateAttribute={updateCurrentLevel}\n      />\n      <Attribute\n        minValue={currentLevel}\n        maxValue={120}\n        attributeName={\"Target Cooking Level\"}\n        updateAttribute={updateTargetLevel}\n        sx={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      />\n      <ToggleButtons\n        updateMaterial={updateMaterial}\n        artisanData={artisanData}\n        skill=\"Cooking\"\n      />\n      <Boosts boosts={boosts} updateBoosts={updateBoosts} />\n\n      <Display\n        level={currentLevel}\n        targetLevel={targetLevel}\n        material={material}\n        keywords={[\"Cooked\"]}\n        boosts={boosts}\n        boostsDidUpdate={boostsDidUpdate}\n      />\n      {/* <Slider sliderName={\"Your Smithing XP\"}/>\n      <Slider sliderName={\"Ore 1\"}/>\n      <Slider sliderName={\"Ore 2\"}/> */}\n      <Footer />\n    </>\n  );\n};\n\nexport default Cooking;\n","import React, { useState } from \"react\";\n\nimport \"../App.css\";\n// import { styled } from \"@material-ui/core/styles\";\n// import Slider from \"./components/Slider\";\nimport Attribute from \"../components/Attribute\";\nimport Display from \"../components/Display\";\n// import Dropdown from \"./components/Dropdown\";\nimport ToggleButtons from \"../components/ToggleButtons\";\nimport Boosts from \"../components/Boosts\";\nimport Footer from \"../components/Footer\";\n\nconst Cooking = () => {\n  // Person's current level\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const updateCurrentLevel = (currentLevel) => {\n    setCurrentLevel(currentLevel);\n  };\n  // Person's target level\n  const [targetLevel, setNextAttribute] = useState(1);\n  const updateTargetLevel = (targetLevel) => {\n    setNextAttribute(targetLevel);\n  };\n  // Person's target material\n  const [material, setMaterial] = useState([\n    \"material\",\n    { name: \"material\", submaterials: {} },\n  ]);\n  const updateMaterial = (material) => {\n    setMaterial(material);\n  };\n\n  // Person's target material\n  const [artisanData, setArtisanData] = useState({});\n\n  // Exp boosts\n  const [boostsDidUpdate, setBoostDidUpdate] = useState([\"Boost name\", false]);\n  const [boosts, setBoosts] = useState([\n    { name: \"World Boost\", value: 1.5, active: false },\n  ]);\n  const updateBoosts = (boosts, updatedBoostName) => {\n    setBoosts(boosts);\n    setBoostDidUpdate([updatedBoostName, !boostsDidUpdate[1]]);\n    console.log(\"Boosts update\", updatedBoostName);\n  };\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:8000/artisan\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        // setBusy(false);\n        setArtisanData(data);\n        // console.log(\"set busy\");\n      })\n      .catch((error) => {\n        console.log(\"Error:\", error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Attribute\n        minValue={0}\n        maxValue={120}\n        attributeName={\"Your Crafting Level\"}\n        updateAttribute={updateCurrentLevel}\n      />\n      <Attribute\n        minValue={currentLevel}\n        maxValue={120}\n        attributeName={\"Target Crafting Level\"}\n        updateAttribute={updateTargetLevel}\n        sx={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      />\n      <ToggleButtons\n        updateMaterial={updateMaterial}\n        artisanData={artisanData}\n        skill=\"Crafting\"\n      />\n      <Boosts boosts={boosts} updateBoosts={updateBoosts} />\n\n      <Display\n        level={currentLevel}\n        targetLevel={targetLevel}\n        material={material}\n        keywords={[\"Relics of\"]}\n        boosts={boosts}\n        boostsDidUpdate={boostsDidUpdate}\n      />\n      {/* <Slider sliderName={\"Your Smithing XP\"}/>\n      <Slider sliderName={\"Ore 1\"}/>\n      <Slider sliderName={\"Ore 2\"}/> */}\n      <Footer />\n    </>\n  );\n};\n\nexport default Cooking;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Header = () => {\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Curse of Aros Skills Calculator\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Tabs, Tab, Box } from \"@material-ui/core\";\nimport Smithing from \"./tabs/Smithing\";\nimport Cooking from \"./tabs/Cooking\";\nimport Crafting from \"./tabs/Crafting\";\nimport Header from \"./components/Header\";\n\nconst Home = (props) => {\n  const { match, history } = props;\n  const { params } = match;\n  const { page } = params;\n\n  const tabNameToIndex = {\n    0: \"smithing\",\n    1: \"crafting\",\n    2: \"cooking\"\n  };\n\n  const indexToTabName = {\n    smithing: 0,\n    crafting: 1,\n    cooking: 2,\n  };\n\n  const [selectedTab, setSelectedTab] = React.useState(indexToTabName[page]);\n\n  const handleChange = (event, newValue) => {\n    history.push(`/${tabNameToIndex[newValue]}`);\n    setSelectedTab(newValue);\n  };\n\n  return (\n    <>\n      <Header />\n      <Box sx={{ width: \"100%\" }}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\", marginBottom: 1 }}>\n          <Tabs\n            value={selectedTab}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            // scrollButtons={false}\n          >\n            <Tab label=\"Smithing\" />\n            <Tab label=\"Crafting\" />\n            <Tab label=\"Cooking\" />\n            <Tab label=\"Mining (Coming soon)\" disabled />\n            <Tab label=\"Woodcutting (Coming soon)\" disabled />\n            <Tab label=\"Fishing (Coming soon)\" disabled />\n          </Tabs>\n        </Box>\n      </Box>\n      {selectedTab === 0 && <Smithing />}\n      {selectedTab === 1 && <Crafting />}\n      {selectedTab === 2 && <Cooking />}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/smithing\" />\n      <Route exact path=\"/:page?\" render={(props) => <Home {...props} />} />\n      {/* <Route render={() => <Redirect to={{ pathname: \"/smithing\" }} />} /> */}\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <CssBaseline />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}